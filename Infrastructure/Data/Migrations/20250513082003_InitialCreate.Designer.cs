// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250513082003_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.comment", b =>
                {
                    b.Property<string>("comment_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parent_comment_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("post_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("posted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.HasKey("comment_id")
                        .HasName("PK__comments__E79576872D4BCFF3");

                    b.HasIndex(new[] { "parent_comment_id" }, "idx_comments_parent_comment_id");

                    b.HasIndex(new[] { "post_id" }, "idx_comments_post_id");

                    b.HasIndex(new[] { "user_id" }, "idx_comments_user_id");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("Domain.Entities.group_chat", b =>
                {
                    b.Property<string>("group_chat_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("group_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("started_at")
                        .HasColumnType("datetime2");

                    b.HasKey("group_chat_id")
                        .HasName("PK__group_ch__C4565A197B17399A");

                    b.HasIndex(new[] { "created_by" }, "idx_group_chats_created_by");

                    b.ToTable("group_chats");
                });

            modelBuilder.Entity("Domain.Entities.group_chat_member", b =>
                {
                    b.Property<string>("group_chat_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("user_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("joined_time")
                        .HasColumnType("datetime2");

                    b.HasKey("group_chat_id", "user_id")
                        .HasName("PK__group_ch__2FCDB96954BC89A1");

                    b.HasIndex(new[] { "user_id" }, "idx_group_chat_members_user_id");

                    b.ToTable("group_chat_members");
                });

            modelBuilder.Entity("Domain.Entities.message", b =>
                {
                    b.Property<string>("message_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("group_chat_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<bool?>("is_read")
                        .HasColumnType("bit");

                    b.Property<string>("media_type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("media_url")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("receiver_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("sender_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("sent_time")
                        .HasColumnType("datetime2");

                    b.HasKey("message_id")
                        .HasName("PK__messages__0BBF6EE642C374DA");

                    b.HasIndex(new[] { "group_chat_id" }, "idx_messages_group_chat_id");

                    b.HasIndex(new[] { "receiver_id" }, "idx_messages_receiver_id");

                    b.HasIndex(new[] { "sender_id" }, "idx_messages_sender_id");

                    b.HasIndex(new[] { "sent_time" }, "idx_messages_sent_time");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("Domain.Entities.notification", b =>
                {
                    b.Property<string>("notification_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<bool?>("is_read")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("posted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("related_message_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("related_post_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("related_user_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.HasKey("notification_id")
                        .HasName("PK__notifica__E059842F3BEEC7F2");

                    b.HasIndex("related_message_id");

                    b.HasIndex("related_post_id");

                    b.HasIndex("related_user_id");

                    b.HasIndex(new[] { "posted_at" }, "idx_notifications_posted_at");

                    b.HasIndex(new[] { "type" }, "idx_notifications_type");

                    b.HasIndex(new[] { "user_id" }, "idx_notifications_user_id");

                    b.ToTable("notifications");
                });

            modelBuilder.Entity("Domain.Entities.post", b =>
                {
                    b.Property<string>("post_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("posted_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.HasKey("post_id")
                        .HasName("PK__posts__3ED78766278CA679");

                    b.HasIndex(new[] { "user_id", "posted_at" }, "idx_posts_user_id_posted_at");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("Domain.Entities.post_vote", b =>
                {
                    b.Property<string>("user_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("post_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("vote_type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("voted_time")
                        .HasColumnType("datetime2");

                    b.HasKey("user_id", "post_id")
                        .HasName("PK__post_vot__CA534F79D639C874");

                    b.HasIndex(new[] { "post_id" }, "idx_post_votes_post_id");

                    b.ToTable("post_votes");
                });

            modelBuilder.Entity("Domain.Entities.user", b =>
                {
                    b.Property<string>("user_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateOnly?>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("deleted_user_email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("full_name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("intro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("joined_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("user_id")
                        .HasName("PK__users__B9BE370FDF963B05");

                    b.HasIndex(new[] { "email" }, "UQ__users__AB6E616450DAD1D1")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex(new[] { "username" }, "UQ__users__F3DBC57275435824")
                        .IsUnique();

                    b.HasIndex(new[] { "joined_at" }, "idx_users_joined_at");

                    b.HasIndex(new[] { "status" }, "idx_users_status");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Domain.Entities.user_block", b =>
                {
                    b.Property<string>("blocker_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("blocked_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("blocked_time")
                        .HasColumnType("datetime2");

                    b.HasKey("blocker_id", "blocked_id")
                        .HasName("PK__user_blo__638690F315B6A534");

                    b.HasIndex("blocked_id");

                    b.HasIndex(new[] { "blocker_id" }, "idx_user_blocks_blocker_id");

                    b.ToTable("user_blocks");
                });

            modelBuilder.Entity("Domain.Entities.user_follow", b =>
                {
                    b.Property<string>("follower_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("followed_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("followed_time")
                        .HasColumnType("datetime2");

                    b.HasKey("follower_id", "followed_id")
                        .HasName("PK__user_fol__838707A392C5B5CF");

                    b.HasIndex(new[] { "followed_id" }, "idx_user_follows_followed_id");

                    b.ToTable("user_follows");
                });

            modelBuilder.Entity("Domain.Entities.video_call", b =>
                {
                    b.Property<string>("call_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("caller_id")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("end_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("group_chat_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("receiver_id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime?>("start_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("call_id")
                        .HasName("PK__video_ca__427DCE6882AA82CC");

                    b.HasIndex("receiver_id");

                    b.HasIndex(new[] { "caller_id" }, "idx_video_calls_caller_id");

                    b.HasIndex(new[] { "group_chat_id" }, "idx_video_calls_group_chat_id");

                    b.HasIndex(new[] { "start_time" }, "idx_video_calls_start_time");

                    b.ToTable("video_calls");
                });

            modelBuilder.Entity("Domain.Entities.comment", b =>
                {
                    b.HasOne("Domain.Entities.comment", "parent_comment")
                        .WithMany("Inverseparent_comment")
                        .HasForeignKey("parent_comment_id")
                        .HasConstraintName("fk_comments_parent_comment_id");

                    b.HasOne("Domain.Entities.post", "post")
                        .WithMany("comments")
                        .HasForeignKey("post_id")
                        .IsRequired()
                        .HasConstraintName("fk_comments_post_id");

                    b.HasOne("Domain.Entities.user", "user")
                        .WithMany("comments")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fk_comments_user_id");

                    b.Navigation("parent_comment");

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Entities.group_chat", b =>
                {
                    b.HasOne("Domain.Entities.user", "created_byNavigation")
                        .WithMany("group_chats")
                        .HasForeignKey("created_by")
                        .IsRequired()
                        .HasConstraintName("fk_group_chats_created_by");

                    b.Navigation("created_byNavigation");
                });

            modelBuilder.Entity("Domain.Entities.group_chat_member", b =>
                {
                    b.HasOne("Domain.Entities.group_chat", "group_chat")
                        .WithMany("group_chat_members")
                        .HasForeignKey("group_chat_id")
                        .IsRequired()
                        .HasConstraintName("fk_group_chat_members_group_chat_id");

                    b.HasOne("Domain.Entities.user", "user")
                        .WithMany("group_chat_members")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fk_group_chat_members_user_id");

                    b.Navigation("group_chat");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Entities.message", b =>
                {
                    b.HasOne("Domain.Entities.group_chat", "group_chat")
                        .WithMany("messages")
                        .HasForeignKey("group_chat_id")
                        .HasConstraintName("fk_messages_group_chat_id");

                    b.HasOne("Domain.Entities.user", "receiver")
                        .WithMany("messagereceivers")
                        .HasForeignKey("receiver_id")
                        .HasConstraintName("fk_messages_receiver_id");

                    b.HasOne("Domain.Entities.user", "sender")
                        .WithMany("messagesenders")
                        .HasForeignKey("sender_id")
                        .IsRequired()
                        .HasConstraintName("fk_messages_sender_id");

                    b.Navigation("group_chat");

                    b.Navigation("receiver");

                    b.Navigation("sender");
                });

            modelBuilder.Entity("Domain.Entities.notification", b =>
                {
                    b.HasOne("Domain.Entities.message", "related_message")
                        .WithMany("notifications")
                        .HasForeignKey("related_message_id")
                        .HasConstraintName("fk_notifications_related_message_id");

                    b.HasOne("Domain.Entities.post", "related_post")
                        .WithMany("notifications")
                        .HasForeignKey("related_post_id")
                        .HasConstraintName("fk_notifications_related_post_id");

                    b.HasOne("Domain.Entities.user", "related_user")
                        .WithMany("notificationrelated_users")
                        .HasForeignKey("related_user_id")
                        .IsRequired()
                        .HasConstraintName("fk_notifications_related_user_id");

                    b.HasOne("Domain.Entities.user", "user")
                        .WithMany("notificationusers")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fk_notifications_user_id");

                    b.Navigation("related_message");

                    b.Navigation("related_post");

                    b.Navigation("related_user");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Entities.post", b =>
                {
                    b.HasOne("Domain.Entities.user", "user")
                        .WithMany("posts")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fk_posts_user_id");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Entities.post_vote", b =>
                {
                    b.HasOne("Domain.Entities.post", "post")
                        .WithMany("post_votes")
                        .HasForeignKey("post_id")
                        .IsRequired()
                        .HasConstraintName("fk_post_votes_post_id");

                    b.HasOne("Domain.Entities.user", "user")
                        .WithMany("post_votes")
                        .HasForeignKey("user_id")
                        .IsRequired()
                        .HasConstraintName("fk_post_votes_user_id");

                    b.Navigation("post");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Domain.Entities.user_block", b =>
                {
                    b.HasOne("Domain.Entities.user", "blocked")
                        .WithMany("user_blockblockeds")
                        .HasForeignKey("blocked_id")
                        .IsRequired()
                        .HasConstraintName("fk_user_blocks_blocked_id");

                    b.HasOne("Domain.Entities.user", "blocker")
                        .WithMany("user_blockblockers")
                        .HasForeignKey("blocker_id")
                        .IsRequired()
                        .HasConstraintName("fk_user_blocks_blocker_id");

                    b.Navigation("blocked");

                    b.Navigation("blocker");
                });

            modelBuilder.Entity("Domain.Entities.user_follow", b =>
                {
                    b.HasOne("Domain.Entities.user", "followed")
                        .WithMany("user_followfolloweds")
                        .HasForeignKey("followed_id")
                        .IsRequired()
                        .HasConstraintName("fk_user_follows_followed_id");

                    b.HasOne("Domain.Entities.user", "follower")
                        .WithMany("user_followfollowers")
                        .HasForeignKey("follower_id")
                        .IsRequired()
                        .HasConstraintName("fk_user_follows_follower_id");

                    b.Navigation("followed");

                    b.Navigation("follower");
                });

            modelBuilder.Entity("Domain.Entities.video_call", b =>
                {
                    b.HasOne("Domain.Entities.user", "caller")
                        .WithMany("video_callcallers")
                        .HasForeignKey("caller_id")
                        .IsRequired()
                        .HasConstraintName("fk_video_calls_caller_id");

                    b.HasOne("Domain.Entities.group_chat", "group_chat")
                        .WithMany("video_calls")
                        .HasForeignKey("group_chat_id")
                        .HasConstraintName("fk_video_calls_group_chat_id");

                    b.HasOne("Domain.Entities.user", "receiver")
                        .WithMany("video_callreceivers")
                        .HasForeignKey("receiver_id")
                        .HasConstraintName("fk_video_calls_receiver_id");

                    b.Navigation("caller");

                    b.Navigation("group_chat");

                    b.Navigation("receiver");
                });

            modelBuilder.Entity("Domain.Entities.comment", b =>
                {
                    b.Navigation("Inverseparent_comment");
                });

            modelBuilder.Entity("Domain.Entities.group_chat", b =>
                {
                    b.Navigation("group_chat_members");

                    b.Navigation("messages");

                    b.Navigation("video_calls");
                });

            modelBuilder.Entity("Domain.Entities.message", b =>
                {
                    b.Navigation("notifications");
                });

            modelBuilder.Entity("Domain.Entities.post", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("notifications");

                    b.Navigation("post_votes");
                });

            modelBuilder.Entity("Domain.Entities.user", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("group_chat_members");

                    b.Navigation("group_chats");

                    b.Navigation("messagereceivers");

                    b.Navigation("messagesenders");

                    b.Navigation("notificationrelated_users");

                    b.Navigation("notificationusers");

                    b.Navigation("post_votes");

                    b.Navigation("posts");

                    b.Navigation("user_blockblockeds");

                    b.Navigation("user_blockblockers");

                    b.Navigation("user_followfolloweds");

                    b.Navigation("user_followfollowers");

                    b.Navigation("video_callcallers");

                    b.Navigation("video_callreceivers");
                });
#pragma warning restore 612, 618
        }
    }
}
